rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is a member of a project
    function isProjectMember() {
      return request.auth.uid in resource.data.members;
    }

    // Users can read their own profile and create it. No one can delete profiles.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }

    // Rules for the 'projects' collection
    match /projects/{projectId} {
      // Allow read (get, list) if the user's UID is in the memberUids array.
      // This works for both the dashboard query and getting a single document.
      // Also allow reading if it's a shared project.
      allow read: if (request.auth.uid in resource.data.memberUids) || (resource.data.shareableId != null);

      // WRITE Rules
      allow create: if request.auth.uid != null &&
                      request.auth.uid == request.resource.data.ownerId &&
                      request.auth.uid in request.resource.data.members;
      
      allow update: if request.auth.uid in resource.data.members;

      allow delete: if request.auth.uid == resource.data.ownerId;

      // Rules for the 'expenses' subcollection
      match /expenses/{expenseId} {
        // Allow reading expenses if the user is a member of the parent project.
        allow read: if request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.members;

        // Allow creating an expense if the user is a member and the creator.
        allow create: if (request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.members) &&
                        request.auth.uid == request.resource.data.createdBy;

        // Allow updating/deleting an expense only if the user is the one who created it.
        allow update, delete: if request.auth.uid == resource.data.createdBy;
      }
    }
  }
} 